#!/bin/sh

set -o nounset
set -o errexit

if test "$#" = 0; then
    printf '>>> Welcome to NixOS installation script!\n\n'
    printf '>>> To partition uefi:\n'
    printf '>>> # %s uefi [SWAP 8GB BY DEFAULT]\n\n' "$(basename "$0")"
    printf '>>> To partition uefi crypted:\n'
    printf '>>> # %s uefic [SWAP 8G BY DEFAULT]\n\n' "$(basename "$0")"
    printf '>>> To partition mbr:\n'
    printf '>>> # %s mbr [SWAP 2GB BY DEFAULT]\n\n' "$(basename "$0")"
    printf '>>> To partition mbr crypted:\n'
    printf '>>> # %s mbrc [SWAP 2G BY DEFAULT]\n\n' "$(basename "$0")"
    printf '>>> To install:\n'
    printf '>>> # %s install\n\n' "$(basename "$0")"
    exit 1
fi

case "${1}" in
    uefi)
        parted /dev/sda -- mklabel gpt
        parted /dev/sda -- mkpart primary 512MiB "-${2:-8GB}"
        parted /dev/sda -- mkpart primary linux-swap "-${2:-8GB}" 100%
        parted /dev/sda -- mkpart ESP fat32 1MiB 512MiB
        parted /dev/sda -- set 3 esp on
        mkfs.ext4 -L root /dev/sda1
        mkswap -L swap /dev/sda2
        mkfs.fat -F 32 -n boot /dev/sda3
        mount /dev/disk/by-label/root /mnt
        mkdir -p /mnt/boot
        mount /dev/disk/by-label/boot /mnt/boot
        swapon /dev/sda2
        nixos-generate-config --root /mnt
        ;;
    uefic)
        parted /dev/sda -- mklabel gpt
        parted /dev/sda -- mkpart primary 512MiB 100%
        parted /dev/sda -- mkpart ESP fat32 1MiB 512MiB
        parted /dev/sda -- set 2 esp on

        cryptsetup luksFormat /dev/sda1
        cryptsetup luksOpen /dev/sda1 enc-pv

        pvcreate /dev/mapper/enc-pv
        vgcreate vg /dev/mapper/enc-pv
        lvcreate -L "${2:-8G}" -n swap vg
        lvcreate -l '100%FREE' -n root vg

        mkfs.fat -F 32 -n boot /dev/sda2
        mkfs.ext4 -L root /dev/vg/root
        mkswap -L swap /dev/vg/swap

        mount /dev/vg/root /mnt
        mkdir -p /mnt/boot
        mount /dev/disk/by-label/boot /mnt/boot
        swapon /dev/vg/swap

        cat >hardware-configuration.nix <<EOF
// {
  boot.initrd.luks.devices."root" = {
    device = "/dev/sda1";
    preLVM = true;
    allowDiscards = true;
  };
}
EOF

        nixos-generate-config --root /mnt
        ;;
    mbr)
        parted /dev/sda -- mklabel msdos
        parted /dev/sda -- mkpart primary 1MiB "-${2:-2GB}"
        parted /dev/sda -- mkpart primary linux-swap "-${2:-2GB}" 100%
        mkfs.ext4 -L root /dev/sda1
        mkswap -L swap /dev/sda2
        mount /dev/disk/by-label/root /mnt
        swapon /dev/sda2
        nixos-generate-config --root /mnt
        ;;
    mbrc)
        parted /dev/sda -- mklabel msdos
        parted /dev/sda -- mkpart primary 512MiB 100%
        parted /dev/sda -- mkpart primary fat32 1MiB 512MiB
        parted /dev/sda -- set 2 boot on

        cryptsetup luksFormat /dev/sda1
        cryptsetup luksOpen /dev/sda1 enc-pv

        pvcreate /dev/mapper/enc-pv
        vgcreate vg /dev/mapper/enc-pv
        lvcreate -L "${2:-2G}" -n swap vg
        lvcreate -l '100%FREE' -n root vg

        mkfs.fat -F 32 -n boot /dev/sda2
        mkfs.ext4 -L root /dev/vg/root
        mkswap -L swap /dev/vg/swap

        mount /dev/vg/root /mnt
        mkdir -p /mnt/boot
        mount /dev/disk/by-label/boot /mnt/boot
        swapon /dev/vg/swap

        cat >hardware-configuration.nix <<EOF
// {
  boot.initrd.luks.devices."root" = {
    device = "/dev/sda1";
    preLVM = true;
    allowDiscards = true;
  };
}
EOF

        nixos-generate-config --root /mnt
        ;;
    install)
        printf '>>> Configuring the environment\n'
        printf '>>> Mapping ctrl to caps\n'
        loadkeys ./ctrl2caps.map
        printf '>>> Installing emacs\n'
        nix-build emacs.nix

        printf '>>> Install configuration.nix:\n'
        mv /mnt/etc/nixos/configuration.nix /mnt/etc/nixos/orig_configuration.nix
        cp ./configuration.nix /mnt/etc/nixos/configuration.nix
        cp ./ctrl2caps.map /mnt/etc/nixos/ctrl2caps.map

        if test -e hardware-configuration.nix; then
            cat hardware-configuration.nix >>/mnt/etc/nixos/hardware-configuration.nix
        fi

        ./result/bin/emacs /mnt/etc/nixos/configuration.nix /mnt/etc/nixos/orig_configuration.nix
        rm /mnt/etc/nixos/orig_configuration.nix

        printf '>>> ALL SET! Now run:\n'
        printf '>>> # nixos-install\n'
        printf '>>> # reboot\n\n'
        printf '>>> Login\n\n'
        printf '>>> $ nix-shell -p git --run "git clone ''https://github.com/xFA25E/nixpkgs-config'' .config/nixpkgs"\n'
        printf '>>> $ cd .config/nixpkgs"\n'
        printf '>>> $ ./install\n\n'
        printf '>>> Enjoy! :)\n'
        ;;
    *)
        printf '>>> Select installation type! For more details:\n'
        printf '>>> # %s\n' "$(basename $0)"
        exit 1
esac
